name: Node.js Package

on:
  push:
  pull_request:
    types: [opened]
  # release:
  #   types: [created]

env:
  NODE_CACHE: "pnpm"
  NODE_VERSION: "20.x"
  NPM_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          cache: "${{ env.NODE_CACHE }}"
          node-version: "${{ env.NODE_VERSION }}"
          scope: "${{ env.NODE_SCOPE }}"

      - run: pnpm install

      - run: pnpm run build

      - uses: actions/upload-artifact@v3
        with:
          name: lib
          retention-days: 5
          path: |
            dist
            package.json
            README.md

  update-release-draft:
    if: github.ref == 'refs/heads/main'
    needs: build
    permissions:
      contents: write
      pull-requests: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter-config.yml
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-npm:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build, update-release-draft]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: corepack enable

      - uses: actions/setup-node@v4
        with:
          cache: "${{ env.NODE_CACHE }}"
          node-version: "${{ env.NODE_VERSION }}"
          scope: "${{ env.NODE_SCOPE }}"

      - uses: actions/download-artifact@v3
        with:
          name: lib
          path: ./

      - run: |
          pnpm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          pnpm install
          git config user.name "Github Actions Bot"
          git config user.email "<>"
          node scripts/set-version.mjs $(git describe --tag --abbrev=0)
          pnpm publish -r --publish-branch main --access public --no-git-checks
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
